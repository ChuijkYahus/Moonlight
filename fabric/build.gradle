plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }


    modCompileOnly("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
        exclude group: 'net.fabricmc.fabric-api'
    }
    modCompileOnly(include("curse.maven:modmenu-308702:3850113"))
    modCompileOnly "com.terraformersmc:modmenu:4.0.6", {
        exclude module: "fabric-api"
    }

    modCompileOnly("curse.maven:yacl-667299:4523734")
    //modCompileOnly("curse.maven:super-better-grass-911433:4744836")
    modCompileOnly("curse.maven:map-atlases-436298:5018173")
    //modImplementation ("curse.maven:supplementaries-412082:4987505")
    // modRuntimeOnly("net.mehvahdjukaar:supplementaries-fabric:1.20-2.7.17")
    modCompileOnly "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"
    modCompileOnly "dev.onyxstudios.cardinal-components-api:cardinal-components-item:${project.cca_version}"
    modCompileOnly "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
    //modRuntimeOnly("curse.maven:gardens-of-the-dead-683174:4784268")
    //modRuntimeOnly("curse.maven:architectury-api-419699:5137936")
    //modRuntimeOnly("curse.maven:terrablender-fabric-565956:5068219")
    //modRuntimeOnly("curse.maven:forge-config-api-port-fabric-547434:4583000")
    //modImplementation("curse.maven:the-bumblezone-fabric-363949:5332804")
    // modImplementation("curse.maven:midnightlib-488090:4576371")
    // modImplementation("curse.maven:athena-841890:4764358")

}



processResources {
    // input variables of this task:
    var replaceProperties = [
            minecraft_version    : minecraft_version,
            minecraft_min_version: minecraft_min_version,
            minecraft_max_version: minecraft_max_version,

            mod_id               : mod_id,
            mod_name             : mod_name,
            mod_version          : mod_version,
            mod_license          : mod_license,
            mod_authors          : mod_authors,
            mod_description      : mod_description,
            mod_credits          : mod_credits,
            mod_homepage         : mod_homepage,
            mod_github           : mod_github
    ]
    // setting them as input
    inputs.properties replaceProperties

    filesMatching("fabric.mod.json") {
        expand replaceProperties + [project: project]
    }
}

shadowJar {
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    exclude '**/example/**'

    injectAccessWidener = true
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier = null
    archiveClassifier = 'fabric'
}

jar {
    archiveClassifier = "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }

    archiveClassifier = "fabric-sources"
}

remapSourcesJar{
    archiveClassifier = "fabric-sources"
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.mod_id + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        maven {
            url = "https://www.cursemaven.com"
            allowInsecureProtocol = true
        }
        maven {
            name = "TerraformersMC"
            url = "https://maven.terraformersmc.com/releases"
        }
        maven {
            url = "https://maven.shedaniel.me"
        }
    }
}
repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases" }
}